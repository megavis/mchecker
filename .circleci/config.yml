version: 2.1

executors:
  python:
    description: Runs docker executor with specific Python version 
    parameters:
      version:
        description: Select the Python version to use in executor
        type: string
        default: "3.8.0"
    docker: 
      - image: cimg/python:<< parameters.version >>

commands:
  dockerhub-workout:
    description: Build image from current path first, then sign in to the Docker Hub and push image there
    parameters:
      image:
        description: name of image
        type: string
      tag:
        description: image tag
        type: string 
        default: "latest"
      username:
        description: Docker Hub login username
        type: string
      secret:
        description: Docker Hub password or token
        type: string
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build image, login to Docker Hub, push
          command: |
            if [ -z "<< parameters.tag >>" ]; then 
            IMAGE_TAG="latest";
            else
            IMAGE_TAG="<< parameters.tag >>"; # FIXME
            fi
            docker login -u << parameters.username >> -p << parameters.secret >>
            docker build -t << parameters.image >>:$IMAGE_TAG .
            docker push << parameters.image >>:$IMAGE_TAG

jobs:
  build-and-test:
    executor: python

    working_directory: ~/src
    environment:
      - TEST_RESULTS: /tmp/test_results.log

    steps:
      - checkout
      - run: 
          name: Setup environment
          command: | 
                  pip install --upgrade pip
                  pip install Django==3.1.3
      - run:
          name: Start webserver and run simple test
          command: |
            set -ou pipefail
            cd ./project/mcproject/
            python ./manage.py runserver 0:8000 & 
            export DJANGO_PID=$!
            sleep 5
            netstat -altn | tee $TEST_RESULTS
            kill -TERM $DJANGO_PID

      - store_artifacts:
          path: /tmp/test_results.log

      - run: cd ~/src/project/

      - dockerhub-workout:
          image: "megavis/mchecker"
          tag: ${CIRCLE_TAG}
          username: $DOCKER_USER
          secret: $DOCKER_TOKEN

  deploy:
    docker:
      - image: cimg/base:stable
    parameters:
      deployment_host:
        description: Describe host's ip, that job should deploy webserver to
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
          - "b7:84:e0:af:11:9a:1c:27:82:45:15:8d:23:83:c7:c9"
      - run:
          name: Pull fresh image and restart container on server
          command: |
            ssh -v -o "StrictHostKeyChecking no" ubuntu@<< parameters.deployment_host >> \<<- EOF
                docker pull megavis/mchecker:latest; 
                docker rm -f web 
                docker run -d -it -p 8000:8000 --name web megavis/mchecker:latest
            EOF
            sleep 5
      - run:
          name: Test server 
          command: curl -m 30 --retry 5 http://<< parameters.deployment_host >>:8000 | tee /tmp/serverstart_results.log
          
      - store_artifacts:
          path: /tmp/serverstart_results.log


workflows:
  main:
    jobs:
      - build-and-test:
          context: mchecker

      - deploy:
          context: mchecker
          deployment_host: $DEPLOYMENT_HOST_IP
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
          requires:
            - build-and-test

